pipeline{
  agent any
  environment{
    DOCKER_IMAGE_TAG = getNewTag()
  }
  stages{
    stage("Build dockerfile"){
      steps{
        sh "docker build . -t kayeofhallownest/nodeapp:${DOCKER_IMAGE_TAG}"
      }
    }
    
    stage("Push docker image to dockerhub"){
      steps{
        sh "docker login -u kayeofhallownest -p pankaye1999"
        sh 'docker push kayeofhallownest/nodeapp:${DOCKER_IMAGE_TAG}'
      }
    }
    
    stage("Deploy docker image to k8s"){
      steps{
        sh "chmod +x changeTag.sh"
        sh "./changeTag.sh ${DOCKER_IMAGE_TAG}"
        sshagent(['k8s-env']) {
          sh "scp -o StrictHostKeyChecking=no services.yml node-app-pod.yml ubuntu@3.38.45.240:/home/ubuntu"
          script{
            try{
              sh "ssh ubuntu@3.38.45.240 kubectl apply -f ."
            }catch(error){
              sh "ssh ubuntu@3.38.45.240 kubectl create -f ."
            }
          }
        }
      }
    }
  }
}

def getNewTag(){
    def tag  = sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}
